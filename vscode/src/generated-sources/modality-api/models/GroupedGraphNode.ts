/* tslint:disable */
/* eslint-disable */
/**
 * Modality REST API
 * Modality REST API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@auxon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttrVal } from './AttrVal';
import {
    AttrValFromJSON,
    AttrValFromJSONTyped,
    AttrValToJSON,
} from './AttrVal';

/**
 * A node in a `GroupedGraph`
 * @export
 * @interface GroupedGraphNode
 */
export interface GroupedGraphNode {
    /**
     * These are the values for this node corresponding to the `attr_keys`
     * of the parent `GroupedGraph`
     * @type {Array<AttrVal>}
     * @memberof GroupedGraphNode
     */
    attrVals: Array<AttrVal>;
    /**
     * How many times did events of this group occur?
     * @type {number}
     * @memberof GroupedGraphNode
     */
    count?: number | null;
}

/**
 * Check if a given object implements the GroupedGraphNode interface.
 */
export function instanceOfGroupedGraphNode(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "attrVals" in value;

    return isInstance;
}

export function GroupedGraphNodeFromJSON(json: any): GroupedGraphNode {
    return GroupedGraphNodeFromJSONTyped(json, false);
}

export function GroupedGraphNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupedGraphNode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attrVals': ((json['attr_vals'] as Array<any>).map(AttrValFromJSON)),
        'count': !exists(json, 'count') ? undefined : json['count'],
    };
}

export function GroupedGraphNodeToJSON(value?: GroupedGraphNode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attr_vals': ((value.attrVals as Array<any>).map(AttrValToJSON)),
        'count': value.count,
    };
}

