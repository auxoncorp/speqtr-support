/* tslint:disable */
/* eslint-disable */
/**
 * Modality REST API
 * Modality REST API
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@auxon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * An edge in a `GroupedGraph`
 * @export
 * @interface GroupedGraphEdge
 */
export interface GroupedGraphEdge {
    /**
     * How many times did this particular transition occur?
     * @type {number}
     * @memberof GroupedGraphEdge
     */
    count: number;
    /**
     * Corresponds to a position in the `GroupedGraph.nodes` array
     * @type {number}
     * @memberof GroupedGraphEdge
     */
    destination: number;
    /**
     * Corresponds to a position in the `GroupedGraph.nodes` array
     * @type {number}
     * @memberof GroupedGraphEdge
     */
    source: number;
}

/**
 * Check if a given object implements the GroupedGraphEdge interface.
 */
export function instanceOfGroupedGraphEdge(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "destination" in value;
    isInstance = isInstance && "source" in value;

    return isInstance;
}

export function GroupedGraphEdgeFromJSON(json: any): GroupedGraphEdge {
    return GroupedGraphEdgeFromJSONTyped(json, false);
}

export function GroupedGraphEdgeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupedGraphEdge {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': json['count'],
        'destination': json['destination'],
        'source': json['source'],
    };
}

export function GroupedGraphEdgeToJSON(value?: GroupedGraphEdge | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': value.count,
        'destination': value.destination,
        'source': value.source,
    };
}

