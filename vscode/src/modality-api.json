{
    "openapi": "3.0.3",
    "info": {
        "title": "Modality REST API",
        "description": "Modality REST API",
        "contact": {
            "name": "Auxon Support",
            "url": "https://auxon.com",
            "email": "support@auxon.com"
        },
        "license": {
            "name": "Proprietary"
        },
        "version": "2.0"
    },
    "paths": {
        "/v2/events/{timeline_id}/summary": {
            "get": {
                "tags": ["events"],
                "summary": "Get an event summary for a single timeline",
                "description": "Get an event summary for a single timeline",
                "operationId": "get_events_summary_for_timeline",
                "parameters": [
                    {
                        "name": "timeline_id",
                        "in": "path",
                        "description": "Timeline id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved Events Summary Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsSummary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Timeline Id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Timeline Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/mutations": {
            "get": {
                "tags": ["mutations"],
                "summary": "List mutations",
                "description": "List mutations",
                "operationId": "list_mutations",
                "parameters": [
                    {
                        "name": "mutator_id",
                        "in": "query",
                        "description": "Mutator ID",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "explode": true
                    },
                    {
                        "name": "experiment",
                        "in": "query",
                        "description": "Experiment name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "explode": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List mutations successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mutation"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid mutator_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MutationsError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MutationsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/mutators": {
            "get": {
                "tags": ["mutators"],
                "summary": "List mutators",
                "description": "List mutators",
                "operationId": "list_mutators",
                "parameters": [
                    {
                        "name": "mutator_filter",
                        "in": "query",
                        "description": "Mutator filter expression",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "explode": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List mutators successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Mutator"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid mutator_filter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MutatorsError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MutatorsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/specs": {
            "get": {
                "tags": ["specs"],
                "summary": "List all specs",
                "description": "List all specs",
                "operationId": "list_specs",
                "responses": {
                    "200": {
                        "description": "List all specs successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SpecVersionMetadata"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/specs/{spec_name}": {
            "get": {
                "tags": ["specs"],
                "summary": "Get the current version of the named spec",
                "description": "Get the current version of the named spec",
                "operationId": "get_spec",
                "responses": {
                    "200": {
                        "description": "Get spec successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecContent"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Spec not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/specs/{spec_name}/structure": {
            "get": {
                "tags": ["specs"],
                "summary": "Get the structure of behaviors and cases for the stored spec",
                "description": "Get the structure of behaviors and cases for the stored spec",
                "operationId": "get_spec_structure",
                "responses": {
                    "200": {
                        "description": "Get spec structure successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecStructure"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Spec not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/specs/{spec_name}/versions": {
            "get": {
                "tags": ["specs"],
                "summary": "List all the versions of the named spec",
                "description": "List all the versions of the named spec",
                "operationId": "list_spec_versions",
                "responses": {
                    "200": {
                        "description": "List spec versions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SpecVersionMetadata"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Spec not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/specs/{spec_name}/versions/{spec_version}": {
            "get": {
                "tags": ["specs"],
                "summary": "Get a specific verison of the named spec",
                "description": "Get a specific verison of the named spec",
                "operationId": "get_spec_version",
                "parameters": [
                    {
                        "name": "spec_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SpecName"
                        }
                    },
                    {
                        "name": "spec_version",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SpecVersionId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List spec versions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecContent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid spec version",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Spec or spec version not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/specs/{spec_name}/versions/{spec_version}/results": {
            "get": {
                "tags": ["specs"],
                "summary": "List stored evaluation results for the given spec version",
                "description": "List stored evaluation results for the given spec version",
                "operationId": "list_spec_version_results",
                "parameters": [
                    {
                        "name": "spec_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SpecName"
                        }
                    },
                    {
                        "name": "spec_version",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SpecVersionId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List spec evalutation results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SpecEvalOutcomeHighlights"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid spec version",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Spec or spec version not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/specs/{spec_name}/versions/{spec_version}/structure": {
            "get": {
                "tags": ["specs"],
                "summary": "List stored evaluation results for the given spec version",
                "description": "List stored evaluation results for the given spec version",
                "operationId": "get_spec_version_structure",
                "parameters": [
                    {
                        "name": "spec_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SpecName"
                        }
                    },
                    {
                        "name": "spec_version",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SpecVersionId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get spec version structure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecStructure"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid spec version",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Spec or spec version not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecsError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/timelines/grouped_graph": {
            "get": {
                "tags": ["timelines"],
                "summary": "Get the contents of the given timelines as a graph, grouped by event attrbutes.",
                "description": "Get the contents of the given timelines as a graph, grouped by event attrbutes.\n\nIf no keys are specified using the 'group_by' query parameter,\nthe graph is grouped by event.name.",
                "operationId": "grouped_graph",
                "parameters": [
                    {
                        "name": "timeline_id",
                        "in": "query",
                        "description": "Timeline Id",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "explode": true
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Grouping attr key",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        },
                        "explode": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the graph successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedGraph"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Timeline Id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimelinesError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Timeline Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimelinesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/timelines/{timeline_id}": {
            "get": {
                "tags": ["timelines"],
                "summary": "Get a single timeline",
                "description": "Get a single timeline",
                "operationId": "get_timeline",
                "parameters": [
                    {
                        "name": "timeline_id",
                        "in": "path",
                        "description": "Timeline id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve Timeline Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Timeline"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Timeline Id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Timeline Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimelinesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces": {
            "get": {
                "tags": ["workspaces"],
                "summary": "List all workspaces",
                "description": "List all workspaces",
                "operationId": "list_workspaces",
                "responses": {
                    "200": {
                        "description": "List all workspaces successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Workspace"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/grouped_graph": {
            "get": {
                "tags": ["workspaces"],
                "summary": "Get the contents of the workspace as a graph, grouped by event attrbutes.",
                "description": "Get the contents of the workspace as a graph, grouped by event attrbutes.\n\nIf no keys are specified using the 'group_by' query parameter,\nthe graph is grouped by (timeline.name, event.name).",
                "operationId": "workspace_grouped_graph",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace version id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Grouping attr key",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        },
                        "explode": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the graph successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedGraph"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/grouped_timelines": {
            "get": {
                "tags": ["workspaces"],
                "summary": "List workspace timelines, grouped by the givven attr keys",
                "description": "List workspace timelines, grouped by the givven attr keys",
                "operationId": "list_grouped_workspace_timelines",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace version id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Grouping attr key",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        },
                        "explode": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List grouped timelines successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimelineGroup"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/segments": {
            "get": {
                "tags": ["workspaces"],
                "summary": "List all workspace segments",
                "description": "List all workspace segments",
                "operationId": "list_workspace_segments",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace version id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all segments successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WorkspaceSegmentMetadata"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/segments/{rule_name}/{segment_name}/grouped_graph": {
            "get": {
                "tags": ["workspaces"],
                "summary": "Get the contents of the segment as a graph, grouped by event attributes.",
                "description": "Get the contents of the segment as a graph, grouped by event attributes.\n\nIf no keys are specified using the 'group_by' query parameter,\nthe graph is grouped by (timeline.name, event.name).",
                "operationId": "segment_grouped_graph",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace Version Id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceVersionId"
                        }
                    },
                    {
                        "name": "rule_name",
                        "in": "path",
                        "description": "Segmentation Rule Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SegmentationRuleName"
                        }
                    },
                    {
                        "name": "segment_name",
                        "in": "path",
                        "description": "Segment Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceSegmentName"
                        }
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Grouping attr key",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        },
                        "explode": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the graph successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupedGraph"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace or segment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/segments/{rule_name}/{segment_name}/grouped_timelines": {
            "get": {
                "tags": ["workspaces"],
                "summary": "List all timelines in a specific segment, grouped by the given attr keys",
                "description": "List all timelines in a specific segment, grouped by the given attr keys",
                "operationId": "list_grouped_segment_timelines",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace Version Id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceVersionId"
                        }
                    },
                    {
                        "name": "rule_name",
                        "in": "path",
                        "description": "Segmentation Rule Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SegmentationRuleName"
                        }
                    },
                    {
                        "name": "segment_name",
                        "in": "path",
                        "description": "Segment Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceSegmentName"
                        }
                    },
                    {
                        "name": "group_by",
                        "in": "query",
                        "description": "Grouping attr key",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        },
                        "explode": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List grouped timelines successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimelineGroup"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No grouping attrs specified",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace or segment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/segments/{rule_name}/{segment_name}/spec_coverage": {
            "get": {
                "tags": ["workspaces"],
                "summary": "Get the spec-coverage of the segment.",
                "description": "Get the spec-coverage of the segment.\n\nIf no filters are 'group_by' query parameter,\nthe graph is grouped by (timeline.name, event.name).",
                "operationId": "segment_spec_coverage",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace Version Id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceVersionId"
                        }
                    },
                    {
                        "name": "rule_name",
                        "in": "path",
                        "description": "Segmentation Rule Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SegmentationRuleName"
                        }
                    },
                    {
                        "name": "segment_name",
                        "in": "path",
                        "description": "Segment Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceSegmentName"
                        }
                    },
                    {
                        "name": "spec_name",
                        "in": "query",
                        "description": "Include the latest results of the latest version of this spec in the analysis",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        },
                        "explode": true
                    },
                    {
                        "name": "spec_version",
                        "in": "query",
                        "description": "Include the latest results of this spec version in the analysis",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        },
                        "explode": true
                    },
                    {
                        "name": "spec_result",
                        "in": "query",
                        "description": "Include this spec result in the analysis",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "nullable": true
                        },
                        "explode": true
                    },
                    {
                        "name": "spec_filter",
                        "in": "query",
                        "description": "Expression for filtering specs from the perspective of spec attributes.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "explode": true
                    },
                    {
                        "name": "behavior_filter",
                        "in": "query",
                        "description": "Expression for filtering specs and their behaviors from the perspective of behavior attributes.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "explode": true
                    },
                    {
                        "name": "case_filter",
                        "in": "query",
                        "description": "Expression for filtering specs and their behaviors from the perspective of case attributes.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "explode": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the segment spec coverage successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SegmentCoverage"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace or segment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/segments/{rule_name}/{segment_name}/spec_summary": {
            "get": {
                "tags": ["workspaces"],
                "summary": "List the named spec evaluation summaries of the segment",
                "description": "List the named spec evaluation summaries of the segment",
                "operationId": "segment_spec_summary",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace Version Id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceVersionId"
                        }
                    },
                    {
                        "name": "rule_name",
                        "in": "path",
                        "description": "Segmentation Rule Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SegmentationRuleName"
                        }
                    },
                    {
                        "name": "segment_name",
                        "in": "path",
                        "description": "Segment Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceSegmentName"
                        }
                    },
                    {
                        "name": "spec_filter",
                        "in": "query",
                        "description": "Expression for filtering specs from the perspective of spec attributes.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "explode": true
                    },
                    {
                        "name": "behavior_filter",
                        "in": "query",
                        "description": "Expression for filtering specs and their behaviors from the perspective of behavior attributes.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "explode": true
                    },
                    {
                        "name": "case_filter",
                        "in": "query",
                        "description": "Expression for filtering specs and their behaviors from the perspective of case attributes.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "explode": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieve the segment spec summary successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SpecSegmentEvalOutcomeSummary"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace or segment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/segments/{rule_name}/{segment_name}/timeline_attr_keys": {
            "get": {
                "tags": ["workspaces"],
                "summary": "List all timeline attr keys in a specific segment",
                "description": "List all timeline attr keys in a specific segment",
                "operationId": "list_segment_timeline_attr_keys",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace Version Id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceVersionId"
                        }
                    },
                    {
                        "name": "rule_name",
                        "in": "path",
                        "description": "Segmentation Rule Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SegmentationRuleName"
                        }
                    },
                    {
                        "name": "segment_name",
                        "in": "path",
                        "description": "Segment Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceSegmentName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all timelineattr_keys successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace or segment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/segments/{rule_name}/{segment_name}/timelines": {
            "get": {
                "tags": ["workspaces"],
                "summary": "List all timelines in a specific segment",
                "description": "List all timelines in a specific segment",
                "operationId": "list_segment_timelines",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace Version Id",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceVersionId"
                        }
                    },
                    {
                        "name": "rule_name",
                        "in": "path",
                        "description": "Segmentation Rule Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SegmentationRuleName"
                        }
                    },
                    {
                        "name": "segment_name",
                        "in": "path",
                        "description": "Segment Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/WorkspaceSegmentName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all timelines successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimelineOverview"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace or segment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/timeline_attr_keys": {
            "get": {
                "tags": ["workspaces"],
                "summary": "List the attr keys found on all timelines in this workspace",
                "description": "List the attr keys found on all timelines in this workspace",
                "operationId": "list_workspace_timeline_attr_keys",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace version id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all timeline attr keys successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        },
        "/v2/workspaces/{workspace_version_id}/timelines": {
            "get": {
                "tags": ["workspaces"],
                "summary": "List all workspace timelines",
                "description": "List all workspace timelines",
                "operationId": "list_workspace_timelines",
                "parameters": [
                    {
                        "name": "workspace_version_id",
                        "in": "path",
                        "description": "Workspace version id",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all timelines successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimelineOverview"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid workspace_version_id",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not authorized"
                    },
                    "404": {
                        "description": "Workspace not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspacesError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "ApiKeyAuth": ["access"]
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AttrVal": {
                "oneOf": [
                    {
                        "type": "string",
                        "title": "String"
                    },
                    {
                        "type": "integer",
                        "title": "Integer"
                    },
                    {
                        "type": "number",
                        "title": "Float"
                    },
                    {
                        "type": "boolean",
                        "title": "Bool"
                    },
                    {
                        "type": "object",
                        "title": "TaggedTimelineId",
                        "properties": {
                            "TimelineId": {
                                "$ref": "#/components/schemas/TimelineId"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "TaggedTimestamp",
                        "properties": {
                            "Timestamp": {
                                "$ref": "#/components/schemas/Nanoseconds"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "TaggedLogicalTime",
                        "properties": {
                            "LogicalTime": {
                                "$ref": "#/components/schemas/LogicalTime"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "TaggedEventCoordinate",
                        "properties": {
                            "EventCoordinate": {
                                "$ref": "#/components/schemas/EventCoordinate"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "TaggedBigInt",
                        "properties": {
                            "BigInt": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "TaggedNonFiniteFloat",
                        "properties": {
                            "NonFiniteFloat": {
                                "type": "string",
                                "enum": ["NaN", "-NaN", "Infinity", "-Infinity"]
                            }
                        }
                    }
                ]
            },
            "AttributeMap": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/AttrVal"
                }
            },
            "BehaviorCaseType": {
                "type": "string",
                "enum": ["Nominal", "Recovery", "Prohibited"]
            },
            "BehaviorCoverage": {
                "type": "object",
                "required": ["name", "case_coverage", "test_counts", "vacuous_n_times", "ever_vacuous"],
                "properties": {
                    "case_coverage": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/CaseCoverage"
                        }
                    },
                    "ever_vacuous": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "test_counts": {
                        "$ref": "#/components/schemas/TestCounts"
                    },
                    "triggered_n_times": {
                        "type": "integer",
                        "nullable": true,
                        "minimum": 0
                    },
                    "vacuous_n_times": {
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            "BehaviorName": {
                "type": "string"
            },
            "BehaviorStructure": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AttributeMap"
                    },
                    "cases": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/CaseName"
                                    },
                                    {
                                        "$ref": "#/components/schemas/BehaviorCaseType"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AttributeMap"
                                    }
                                ]
                            }
                        }
                    },
                    "until": {
                        "type": "array",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/CaseName"
                                },
                                {
                                    "$ref": "#/components/schemas/AttributeMap"
                                }
                            ]
                        },
                        "nullable": true
                    },
                    "when": {
                        "type": "array",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/CaseName"
                                },
                                {
                                    "$ref": "#/components/schemas/AttributeMap"
                                }
                            ]
                        },
                        "nullable": true
                    }
                }
            },
            "CaseCoverage": {
                "type": "object",
                "required": ["name", "matched_n_times", "ever_matched", "case_type"],
                "properties": {
                    "case_type": {
                        "$ref": "#/components/schemas/BehaviorCaseType"
                    },
                    "ever_matched": {
                        "type": "boolean"
                    },
                    "matched_n_times": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CaseName": {
                "type": "string"
            },
            "CoverageAggregates": {
                "type": "object",
                "required": [
                    "n_specs",
                    "n_specs_executed",
                    "n_specs_passing",
                    "n_specs_failing",
                    "percentage_specs_executed",
                    "percentage_specs_passing",
                    "percentage_specs_failing",
                    "n_behaviors",
                    "n_behaviors_executed",
                    "n_behaviors_passing",
                    "n_behaviors_failing",
                    "n_behaviors_vacuous",
                    "percentage_behaviors_executed",
                    "percentage_behaviors_passing",
                    "percentage_behaviors_failing",
                    "percentage_behaviors_vacuous",
                    "n_cases",
                    "n_cases_ever_matched",
                    "percentage_cases_ever_matched"
                ],
                "properties": {
                    "n_behaviors": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_behaviors_executed": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_behaviors_failing": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_behaviors_passing": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_behaviors_vacuous": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_cases": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_cases_ever_matched": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_specs": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_specs_executed": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_specs_failing": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "n_specs_passing": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "percentage_behaviors_executed": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentage_behaviors_failing": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentage_behaviors_passing": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentage_behaviors_vacuous": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentage_cases_ever_matched": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentage_specs_executed": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentage_specs_failing": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentage_specs_passing": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "EventCoordinate": {
                "type": "object",
                "properties": {
                    "opaque_event_id": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "title": "EventCoordinateByte",
                            "maximum": 255,
                            "minimum": 0
                        },
                        "maxItems": 16,
                        "minItems": 16
                    },
                    "timeline_id": {
                        "$ref": "#/components/schemas/TimelineId"
                    }
                }
            },
            "EventSummary": {
                "type": "object",
                "required": ["attributes", "n_instances"],
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "n_instances": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EventsError": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["InvalidTimelineId"],
                        "properties": {
                            "InvalidTimelineId": {
                                "type": "string",
                                "description": "Invalid Uuid"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["TimelineNotFound"],
                        "properties": {
                            "TimelineNotFound": {
                                "$ref": "#/components/schemas/TimelineId"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["Internal"],
                        "properties": {
                            "Internal": {
                                "type": "string",
                                "description": "Internal Server Error"
                            }
                        }
                    }
                ],
                "description": "Events operation errors"
            },
            "EventsSummary": {
                "type": "object",
                "required": ["events"],
                "properties": {
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventSummary"
                        }
                    }
                }
            },
            "GroupedGraph": {
                "type": "object",
                "description": "A graph created by grouping together events by their attribute values.",
                "required": ["attr_keys", "nodes", "edges"],
                "properties": {
                    "attr_keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The grouping keys used to compute this graph"
                    },
                    "edges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupedGraphEdge"
                        },
                        "description": "The edges in the graph; node indices in this collection refer to `nodes`."
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupedGraphNode"
                        },
                        "description": "The nodes in the graph"
                    }
                }
            },
            "GroupedGraphEdge": {
                "type": "object",
                "description": "An edge in a `GroupedGraph`",
                "required": ["source", "destination", "count"],
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "description": "How many times did this particular transition occur?",
                        "minimum": 0
                    },
                    "destination": {
                        "type": "integer",
                        "description": "Corresponds to a position in the `GroupedGraph.nodes` array",
                        "minimum": 0
                    },
                    "source": {
                        "type": "integer",
                        "description": "Corresponds to a position in the `GroupedGraph.nodes` array",
                        "minimum": 0
                    }
                }
            },
            "GroupedGraphNode": {
                "type": "object",
                "description": "A node in a `GroupedGraph`",
                "required": ["attr_vals"],
                "properties": {
                    "attr_vals": {
                        "type": "array",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/AttrVal"
                                }
                            ],
                            "nullable": true
                        },
                        "description": "These are the values for this node corresponding to the `attr_keys`\nof the parent `GroupedGraph`"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int64",
                        "description": "How many times did events of this group occur?",
                        "nullable": true,
                        "minimum": 0
                    }
                }
            },
            "LogicalTime": {
                "type": "array",
                "items": {
                    "type": "integer",
                    "title": "LogicalTimeSegment"
                },
                "maxItems": 4,
                "minItems": 4
            },
            "MaybeAttrVal": {
                "oneOf": [
                    {
                        "type": "string",
                        "enum": ["None"]
                    },
                    {
                        "type": "object",
                        "required": ["Some"],
                        "properties": {
                            "Some": {
                                "$ref": "#/components/schemas/AttrVal"
                            }
                        }
                    }
                ],
                "description": "A serialization helper type, for when you actually want Option<AttrVal>. (We're\nnot allowed to implement ToSchema on that...)"
            },
            "Mutation": {
                "type": "object",
                "required": ["mutation_id", "mutator_id", "params", "mutator_attributes"],
                "properties": {
                    "experiment_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "mutation_id": {
                        "$ref": "#/components/schemas/MutationId"
                    },
                    "mutator_attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AttrVal"
                        }
                    },
                    "mutator_id": {
                        "$ref": "#/components/schemas/MutatorId"
                    },
                    "params": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AttrVal"
                        }
                    }
                }
            },
            "MutationId": {
                "type": "string",
                "format": "uuid"
            },
            "MutationsError": {
                "oneOf": [
                    {
                        "type": "string",
                        "enum": ["InvalidMutatorId"]
                    },
                    {
                        "type": "object",
                        "required": ["Internal"],
                        "properties": {
                            "Internal": {
                                "type": "string",
                                "description": "Internal Server Error"
                            }
                        }
                    }
                ],
                "description": "Mutations operation errors"
            },
            "Mutator": {
                "type": "object",
                "required": ["mutator_id", "mutator_attributes", "mutator_state"],
                "properties": {
                    "mutator_attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AttrVal"
                        }
                    },
                    "mutator_id": {
                        "$ref": "#/components/schemas/MutatorId"
                    },
                    "mutator_state": {
                        "$ref": "#/components/schemas/MutatorState"
                    }
                }
            },
            "MutatorId": {
                "type": "string",
                "format": "uuid"
            },
            "MutatorState": {
                "type": "string",
                "enum": ["Available", "Retired", "TimedOut", "Disconnected"]
            },
            "MutatorsError": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["InvalidMutatorFilter"],
                        "properties": {
                            "InvalidMutatorFilter": {
                                "type": "string",
                                "description": "Invalid mutator filter expression"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["Internal"],
                        "properties": {
                            "Internal": {
                                "type": "string",
                                "description": "Internal Server Error"
                            }
                        }
                    }
                ],
                "description": "Mutator operation errors"
            },
            "Nanoseconds": {
                "type": "integer"
            },
            "SegmentCoverage": {
                "type": "object",
                "required": ["spec_coverages", "coverage_aggregates"],
                "properties": {
                    "coverage_aggregates": {
                        "$ref": "#/components/schemas/CoverageAggregates"
                    },
                    "spec_coverages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpecCoverage"
                        }
                    }
                }
            },
            "SegmentationRuleName": {
                "type": "string"
            },
            "SpecContent": {
                "type": "object",
                "required": ["metadata", "speqtr"],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/SpecVersionMetadata"
                    },
                    "speqtr": {
                        "type": "string"
                    }
                }
            },
            "SpecCoverage": {
                "type": "object",
                "required": ["spec_at_version_meta", "behavior_to_coverage", "test_counts"],
                "properties": {
                    "behavior_to_coverage": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/BehaviorCoverage"
                        }
                    },
                    "spec_at_version_meta": {
                        "$ref": "#/components/schemas/SpecVersionMetadata"
                    },
                    "test_counts": {
                        "$ref": "#/components/schemas/TestCounts"
                    }
                }
            },
            "SpecEvalOutcomeHighlights": {
                "type": "object",
                "required": [
                    "spec_eval_results_id",
                    "spec_version_id",
                    "spec_eval_at_utc_seconds",
                    "spec_name",
                    "behaviors",
                    "regions_passing",
                    "regions_failing",
                    "regions_unknown",
                    "regions_vacuous"
                ],
                "properties": {
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "regions_failing": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "regions_passing": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "regions_unknown": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "regions_vacuous": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "spec_eval_at_utc_seconds": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "spec_eval_results_id": {
                        "$ref": "#/components/schemas/SpecEvalResultsId"
                    },
                    "spec_name": {
                        "type": "string"
                    },
                    "spec_version_id": {
                        "$ref": "#/components/schemas/SpecVersionId"
                    }
                }
            },
            "SpecEvalResultsId": {
                "type": "string",
                "format": "uuid"
            },
            "SpecName": {
                "type": "string"
            },
            "SpecSegmentEvalOutcomeSummary": {
                "type": "object",
                "required": ["spec_name", "regions_passing", "regions_failing", "regions_unknown", "regions_vacuous"],
                "properties": {
                    "regions_failing": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "regions_passing": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "regions_unknown": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "regions_vacuous": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    },
                    "spec_name": {
                        "type": "string"
                    }
                }
            },
            "SpecStructure": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "$ref": "#/components/schemas/AttributeMap"
                    },
                    "behaviors": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/BehaviorName"
                                    },
                                    {
                                        "$ref": "#/components/schemas/BehaviorStructure"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "SpecVersionId": {
                "type": "string",
                "format": "uuid"
            },
            "SpecVersionMetadata": {
                "type": "object",
                "required": ["name", "version", "version_number", "created_at", "created_by"],
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "$ref": "#/components/schemas/SpecVersionId"
                    },
                    "version_number": {
                        "type": "integer",
                        "description": "Not uniquely identifying, but helps give a sense of ordering",
                        "minimum": 0
                    }
                }
            },
            "SpecsError": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["SpecNotFound"],
                        "properties": {
                            "SpecNotFound": {
                                "$ref": "#/components/schemas/SpecName"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["SpecVersionNotFound"],
                        "properties": {
                            "SpecVersionNotFound": {
                                "$ref": "#/components/schemas/SpecVersionId"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["Internal"],
                        "properties": {
                            "Internal": {
                                "type": "string",
                                "description": "Internal Server Error"
                            }
                        }
                    }
                ],
                "description": "Spec operation errors"
            },
            "TestCounts": {
                "type": "object",
                "required": [
                    "executed_n_times",
                    "ever_executed",
                    "failed_n_times",
                    "ever_failed",
                    "passed_n_times",
                    "ever_passed"
                ],
                "properties": {
                    "ever_executed": {
                        "type": "boolean"
                    },
                    "ever_failed": {
                        "type": "boolean"
                    },
                    "ever_passed": {
                        "type": "boolean"
                    },
                    "executed_n_times": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "failed_n_times": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "passed_n_times": {
                        "type": "integer",
                        "minimum": 0
                    }
                }
            },
            "Timeline": {
                "type": "object",
                "required": ["id", "attributes"],
                "properties": {
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AttrVal"
                        }
                    },
                    "id": {
                        "$ref": "#/components/schemas/TimelineId"
                    }
                }
            },
            "TimelineGroup": {
                "type": "object",
                "required": ["group_attributes", "timelines"],
                "properties": {
                    "group_attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/MaybeAttrVal"
                        }
                    },
                    "timelines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TimelineOverview"
                        }
                    }
                }
            },
            "TimelineId": {
                "type": "string",
                "format": "uuid"
            },
            "TimelineOverview": {
                "type": "object",
                "required": ["id"],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/TimelineId"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "TimelinesError": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["InvalidTimelineId"],
                        "properties": {
                            "InvalidTimelineId": {
                                "type": "string",
                                "description": "Invalid Uuid"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["TimelineNotFound"],
                        "properties": {
                            "TimelineNotFound": {
                                "$ref": "#/components/schemas/TimelineId"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "required": ["Internal"],
                        "properties": {
                            "Internal": {
                                "type": "string",
                                "description": "Internal Server Error"
                            }
                        }
                    }
                ],
                "description": "Timelines operation errors"
            },
            "Workspace": {
                "type": "object",
                "required": ["name", "version_id"],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version_id": {
                        "$ref": "#/components/schemas/WorkspaceVersionId"
                    }
                }
            },
            "WorkspaceSegmentId": {
                "type": "object",
                "description": "A specific segment of a workspace.",
                "required": ["workspace_version_id", "rule_name", "segment_name"],
                "properties": {
                    "rule_name": {
                        "$ref": "#/components/schemas/SegmentationRuleName"
                    },
                    "segment_name": {
                        "$ref": "#/components/schemas/WorkspaceSegmentName"
                    },
                    "workspace_version_id": {
                        "$ref": "#/components/schemas/WorkspaceVersionId"
                    }
                }
            },
            "WorkspaceSegmentMetadata": {
                "type": "object",
                "description": "A specific segment of a workspace.",
                "required": ["id"],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/WorkspaceSegmentId"
                    },
                    "latest_receive_time": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Nanoseconds"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "WorkspaceSegmentName": {
                "type": "string"
            },
            "WorkspaceVersionId": {
                "type": "string",
                "format": "uuid"
            },
            "WorkspacesError": {
                "oneOf": [
                    {
                        "type": "object",
                        "required": ["WorkspaceNotFound"],
                        "properties": {
                            "WorkspaceNotFound": {
                                "type": "string",
                                "description": "Workspace not found"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "enum": ["SegmentNotFound"]
                    },
                    {
                        "type": "string",
                        "enum": ["NoGroupsSpecified"]
                    },
                    {
                        "type": "string",
                        "enum": ["InvalidSpecVersionId"]
                    },
                    {
                        "type": "string",
                        "enum": ["InvalidSpecResultId"]
                    },
                    {
                        "type": "object",
                        "required": ["Internal"],
                        "properties": {
                            "Internal": {
                                "type": "string",
                                "description": "Internal Server Error"
                            }
                        }
                    }
                ],
                "description": "Workspace operation errors"
            }
        },
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-Auxon-Auth-Token"
            }
        }
    }
}
