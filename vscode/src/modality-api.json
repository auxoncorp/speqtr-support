{
  "openapi": "3.0.3",
  "info": {
    "title": "Modality REST API",
    "description": "Modality REST API",
    "contact": {
      "name": "Auxon Support",
      "url": "https://auxon.com",
      "email": "support@auxon.com"
    },
    "license": {
      "name": "Proprietary"
    },
    "version": "2.0"
  },
  "paths": {
    "/v2/timelines/{timeline_id}": {
      "get": {
        "tags": [
          "timelines"
        ],
        "summary": "Get a single timeline",
        "description": "Get a single timeline",
        "operationId": "get_timeline",
        "parameters": [
          {
            "name": "timeline_id",
            "in": "path",
            "description": "Timeline id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve Timeline Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timeline"
                }
              }
            }
          },
          "403": {
            "description": "Operation not authorized"
          },
          "404": {
            "description": "Timeline Not Found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/v2/workspaces": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List all workspaces",
        "description": "List all workspaces",
        "operationId": "list_workspaces",
        "responses": {
          "200": {
            "description": "List all workspaces successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workspace"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Operation not authorized"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/v2/workspaces/{workspace_version_id}/segments": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List all workspace segments",
        "description": "List all workspace segments",
        "operationId": "list_workspace_segments",
        "parameters": [
          {
            "name": "workspace_version_id",
            "in": "path",
            "description": "Workspace version id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all segments successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceSegmentMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid workspace_version_id"
          },
          "403": {
            "description": "Operation not authorized"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/v2/workspaces/{workspace_version_id}/segments/{rule_name}/{segment_name}/timelines": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List all timelines in a specific segment",
        "description": "List all timelines in a specific segment",
        "operationId": "list_segment_timelines",
        "parameters": [
          {
            "name": "workspace_version_id",
            "in": "path",
            "description": "Workspace Version Id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/WorkspaceVersionId"
            }
          },
          {
            "name": "rule_name",
            "in": "path",
            "description": "Segmentation Rule Name",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SegmentationRuleName"
            }
          },
          {
            "name": "segment_name",
            "in": "path",
            "description": "Segment Name",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/WorkspaceSegmentName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all timelines successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimelineOverview"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid workspace_version_id"
          },
          "403": {
            "description": "Operation not authorized"
          },
          "404": {
            "description": "Workspace or segment not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "access"
            ]
          }
        ]
      }
    },
    "/v2/workspaces/{workspace_version_id}/timelines": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List all workspace timelines",
        "description": "List all workspace timelines",
        "operationId": "list_workspace_timelines",
        "parameters": [
          {
            "name": "workspace_version_id",
            "in": "path",
            "description": "Workspace version id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all timelines successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimelineOverview"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid workspace_version_id"
          },
          "403": {
            "description": "Operation not authorized"
          },
          "404": {
            "description": "Workspace not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": [
              "access"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AttrVal": {
        "oneOf": [
          {
            "type": "string",
            "title": "String"
          },
          {
            "type": "integer",
            "title": "Integer"
          },
          {
            "type": "number",
            "title": "Float"
          },
          {
            "type": "boolean",
            "title": "Bool"
          },
          {
            "type": "object",
            "title": "TaggedTimelineId",
            "properties": {
              "TimelineId": {
                "$ref": "#/components/schemas/TimelineId"
              }
            }
          },
          {
            "type": "object",
            "title": "TaggedTimestamp",
            "properties": {
              "Timestamp": {
                "$ref": "#/components/schemas/Nanoseconds"
              }
            }
          },
          {
            "type": "object",
            "title": "TaggedLogicalTime",
            "properties": {
              "LogicalTime": {
                "$ref": "#/components/schemas/LogicalTime"
              }
            }
          },
          {
            "type": "object",
            "title": "TaggedEventCoordinate",
            "properties": {
              "EventCoordinate": {
                "$ref": "#/components/schemas/EventCoordinate"
              }
            }
          },
          {
            "type": "object",
            "title": "TaggedBigInt",
            "properties": {
              "BigInt": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "title": "TaggedNonFiniteFloat",
            "properties": {
              "NonFiniteFloat": {
                "type": "string",
                "enum": [
                  "NaN",
                  "-NaN",
                  "Infinity",
                  "-Infinity"
                ]
              }
            }
          }
        ]
      },
      "EventCoordinate": {
        "type": "object",
        "properties": {
          "opaque_event_id": {
            "type": "array",
            "items": {
              "type": "integer",
              "title": "EventCoordinateByte",
              "maximum": 255.0,
              "minimum": 0.0
            },
            "maxItems": 16,
            "minItems": 16
          },
          "timeline_id": {
            "$ref": "#/components/schemas/TimelineId"
          }
        }
      },
      "LogicalTime": {
        "type": "array",
        "items": {
          "type": "integer",
          "title": "LogicalTimeSegment"
        },
        "maxItems": 4,
        "minItems": 4
      },
      "Nanoseconds": {
        "type": "integer"
      },
      "SegmentationRuleName": {
        "type": "string"
      },
      "Timeline": {
        "type": "object",
        "required": [
          "id",
          "attributes"
        ],
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/AttrVal"
            }
          },
          "id": {
            "$ref": "#/components/schemas/TimelineId"
          }
        }
      },
      "TimelineId": {
        "type": "string",
        "format": "uuid"
      },
      "TimelineOverview": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/TimelineId"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Workspace": {
        "type": "object",
        "required": [
          "name",
          "version_id"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "version_id": {
            "$ref": "#/components/schemas/WorkspaceVersionId"
          }
        }
      },
      "WorkspaceSegmentId": {
        "type": "object",
        "description": "A specific segment of a workspace.",
        "required": [
          "workspace_version_id",
          "rule_name",
          "segment_name"
        ],
        "properties": {
          "rule_name": {
            "$ref": "#/components/schemas/SegmentationRuleName"
          },
          "segment_name": {
            "$ref": "#/components/schemas/WorkspaceSegmentName"
          },
          "workspace_version_id": {
            "$ref": "#/components/schemas/WorkspaceVersionId"
          }
        }
      },
      "WorkspaceSegmentMetadata": {
        "type": "object",
        "description": "A specific segment of a workspace.",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/WorkspaceSegmentId"
          },
          "latest_receive_time": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Nanoseconds"
              }
            ],
            "nullable": true
          }
        }
      },
      "WorkspaceSegmentName": {
        "type": "string"
      },
      "WorkspaceVersionId": {
        "type": "string",
        "format": "uuid"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Auxon-Auth-Token"
      }
    }
  }
}